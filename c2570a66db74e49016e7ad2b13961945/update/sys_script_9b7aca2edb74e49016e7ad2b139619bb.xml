<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>cmdb_software_instance</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Handle Uninstalls</name>
        <order>90</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	gs.info('Inside Handle SW Uninstall (' + current.operation() + ') : ' + current.software.name + ' ON ' + current.installed_on.name );
	var uninstallRecord = new GlideRecord("x_snc_uninstalled_uninstalled_software");
	var recordFound = false;
	
	uninstallRecord.addQuery('ci_id', current.installed_on.sys_id);
	uninstallRecord.addQuery('product_id', current.software.sys_id);
	uninstallRecord.query();
	
	if(uninstallRecord.hasNext()){
		uninstallRecord.next();
		gs.debug("-- Uninstall record found");
		recordFound = true;
	}
	
	if(current.operation() == "insert") {
		if (recordFound) {
			gs.info("-- Delete Uninstall record as it is being reinstalled : " + uninstallRecord.name);
			if (!uninstallRecord.deleteRecord()) 
				gs.error("Uninstall Record NOT deleted!");
		}
	}
	
	if(current.operation() == "delete") {
		uninstallRecord.ci_id = current.installed_on.sys_id;
		uninstallRecord.name = current.software.name + ' ON ' + current.installed_on.name + " Uninstalled";
		uninstallRecord.product_id = current.software.sys_id;
		uninstallRecord.uninstalled = new GlideDateTime();
		if (recordFound) {
			gs.debug("-- Uninstall update record");
			uninstallRecord.update(); 
		} else {
			gs.debug("-- Uninstall insert record");
			uninstallRecord.insert();					
		}
	}
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-12-03 14:38:09</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>9b7aca2edb74e49016e7ad2b139619bb</sys_id>
        <sys_mod_count>22</sys_mod_count>
        <sys_name>Handle Uninstalls</sys_name>
        <sys_overrides/>
        <sys_package display_value="Uninstalled Software" source="x_snc_uninstalled">c2570a66db74e49016e7ad2b13961945</sys_package>
        <sys_policy/>
        <sys_scope display_value="Uninstalled Software">c2570a66db74e49016e7ad2b13961945</sys_scope>
        <sys_update_name>sys_script_9b7aca2edb74e49016e7ad2b139619bb</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-12-09 13:25:52</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=9b7aca2edb74e49016e7ad2b139619bb"/>
</record_update>
